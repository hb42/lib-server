{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../../../src/server/service/auth.service.ts"],"names":[],"mappings":";;AAEA,oCAAoC;AAEpC,iDAE0B;AAW1B,MAAa,WAAW;IAEtB,YAAoB,MAAc,EAAU,UAAkB;QAA1C,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAQ;IAC9D,CAAC;IAEM,QAAQ,CAAC,OAAY;QAC1B,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACjF,CAAC;IAEM,UAAU,CAAC,GAAoB;QACpC,MAAM,KAAK,GAAuB,GAAG,CAAC,GAAG,CAAC,sBAAS,CAAC,CAAC;QACrD,IAAI,OAAO,GAAQ,IAAI,CAAC;QACxB,IAAI,KAAK,EAAE;YACT,IAAI;gBACF,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,EAAE;oBACZ,OAAO,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;iBACxB;gBACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;oBACjB,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;iBACnB;gBACD,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;aAC1B;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;aAC5D;SACF;QACD,OAAO,OAAO,KAAK,IAAI,CAAC;IAC1B,CAAC;CAEF;AA7BD,kCA6BC","sourcesContent":["\nimport * as express from \"express\";\nimport * as jwt from \"jsonwebtoken\";\n\nimport {\n  JwtHeader,\n} from \"@hb42/lib-common\";\n\n/**\n * JWT Handling\n *\n * Die Application-Daten werden im JWT an \"data\" gehaengt.\n * Das JWT vom Client wird an request.session gehaengt, Zugriff auf die App-Daten:\n *\n *    req[\"session\"][\"data\"]\n *\n */\nexport class AuthService {\n\n  constructor(private secret: string, private timeoutSec: number) {\n  }\n\n  public newToken(payload: any): string {\n    return jwt.sign({ data: payload}, this.secret, { expiresIn: this.timeoutSec });\n  }\n\n  public checkToken(req: express.Request): boolean {\n    const token: string | undefined = req.get(JwtHeader);\n    let decoded: any = null;\n    if (token) {\n      try {\n        decoded = jwt.verify(token, this.secret);\n        if (!decoded) {\n          decoded = { data: {} };\n        }\n        if (!decoded.data) {\n          decoded.data = {};\n        }\n        req[\"session\"] = decoded;\n      } catch (err) {  // TODO throw?\n        console.error(\"Error validating JWT-token \" + err.message);\n      }\n    }\n    return decoded !== null;\n  }\n\n}\n"]}