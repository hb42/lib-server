{"version":3,"file":"logger.service.js","sourceRoot":"","sources":["../../../src/server/service/logger.service.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAoBjC,MAAa,aAAa;IAOjB,MAAM,CAAC,IAAI,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAUM,MAAM,CAAC,GAAG,CAAC,OAAe;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SAClC;aAAM;YAEL,MAAM,MAAM,GAAkB,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IAMM,MAAM,CAAC,QAAQ;QACpB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IAID,YAAoB,QAAgB;QAClC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;CAEF;AAhDD,sCAgDC","sourcesContent":["import * as log4js from \"log4js\";\n/*\n LOG4JS  -> https://github.com/nomiddlename/log4js-node\n Loglevels\n   OFF\n   FATAL\n   ERROR\n   WARN\n   INFO\n   DEBUG\n   TRACE\n   ALL\n */\n\n/**\n * Hilfsklasse fuer log4js\n *\n * Momentan erst einmal nur als zentraler Ort fuer die Konfiguration. Die Klasse\n * muss einmalig mit einer Konfigurations-Datei initialisiert werden.\n */\nexport class LoggerService {\n\n  /**\n   * log4js mit der uebergebenen Config-Datei starten\n   *\n   * @param filename\n   */\n  public static init(filename: string) {\n    this.shutdown();\n    this.instance = new this(filename);\n  }\n\n  /**\n   * Logger fuer eine Kategorie holen\n   *\n   * Die Kategorie wird zusammen mit den Meldungen ins Log geschrieben\n   *\n   * @param logname - Log-Kategorie\n   * @returns {Logger}\n   */\n  public static get(logname: string): log4js.Logger {\n    if (this.instance) {\n      return log4js.getLogger(logname);\n    } else {\n      // noch nicht initialisiert => std logger (console)\n      const logger: log4js.Logger = log4js.getLogger(logname);\n      logger.level = \"all\";  // alles ausgeben\n      return logger;\n    }\n  }\n\n  /**\n   * log4js geordnet beenden\n   *\n   */\n  public static shutdown() {\n    if (this.instance) {\n      log4js.shutdown();\n      this.instance = null;\n    }\n  }\n\n  private static instance: LoggerService | null;\n\n  private constructor(confFile: string) {\n    log4js.configure(confFile);\n  }\n\n}\n"]}