{"version":3,"file":"webserver.js","sourceRoot":"","sources":["../../src/server/webserver.ts"],"names":[],"mappings":"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","sourcesContent":["import * as bodyparser from \"body-parser\";\nimport * as compression from \"compression\";\nimport * as cookieParser from \"cookie-parser\";\nimport * as cors from \"cors\";\nimport * as express from \"express\";\nimport * as http from \"http\";\nimport * as favicon from \"serve-favicon\";\nimport * as uuid from \"uuid\";\n\nimport {\n  authURL,\n  loginURL,\n  makeSseUrl,\n  staticURL,\n} from \"@hb42/lib-common\";\n\nimport {\n  AuthService,\n  LoggerService,\n  RestApi,\n  ServerSentEvent,\n  UserCheck,\n} from \"./service\";\n\nexport class Webserver {\n\n  private app: express.Application;\n  private server: http.Server;\n\n  private log = LoggerService.get(\"lib-server.server.Webserver\");\n\n  // default config\n  //\n  // webapp (set to null if no content)\n  private staticContent: string; // \"./static\";\n  private staticUrl: string = staticURL; // == BASE_URL default \"/app\"\n  // favicon path (mandatory)\n  private faviconPath: string;\n  // log debug info\n  private debug: boolean = false;\n  // einzufuegende APIs (via addApi() eintragen)\n  private apis: RestApi[] = [];\n  // CORS Optionen, sofern gebraucht (z.B. fake asp)\n  private corsOptions: any = null;\n  // Login-Token-Timeout milis\n  private tokentimeout = 5000;\n  // JWT handling\n  private authService: AuthService;\n  // SSE-URL (beginnt immer mit /sse/)\n  private sseUrl: string;\n  // SSE event handling\n  private sse: ServerSentEvent;\n\n  private tokens: any[] = [];\n\n  constructor(private port: number, private appname: string,\n              private userCheck?: UserCheck, log?: express.Handler) {\n    this.app = express();\n    if (log) { // -> log4js\n      this.app.use(log);\n    }\n    if (userCheck) {\n      this.authService = new AuthService(userCheck.getJwtSecret(), userCheck.getJwtTimeout());\n    }\n    // caching komplet abschalten -> verhindert Status 304\n    this.app.disable(\"etag\");\n  }\n\n  // config fn's\n  public setStaticContent(path: string) {\n    this.staticContent = path;\n  }\n\n  public setStaticUrl(url: string) {\n    this.staticUrl = url;\n  }\n\n  public setFaviconPath(path: string) {\n    this.faviconPath = path;\n  }\n\n  public setDebug(dbg: boolean) {\n    this.debug = dbg;\n  }\n\n  public addApi(api: RestApi) {\n    this.apis.push(api);\n  }\n\n  public setCorsOptions(opt: any) {\n    this.corsOptions = opt;\n  }\n\n  public setSSE(url: string) {\n    this.sseUrl = makeSseUrl(url);\n  }\n  public getSSEurl(): string {\n    return this.sseUrl;\n  }\n  public getSSE(): ServerSentEvent {\n    return this.sse;\n  }\n\n  /**\n   * start the webserver\n   */\n  public start() {\n    this.insertStandards();\n    this.insertStatic();\n    if (this.debug) {\n      this.insertDebug();\n    }\n    if (this.userCheck) {\n      this.insertSessionRouter();\n    }\n    this.insertAppRouters();\n    this.insertLast();\n\n    this.run();\n  }\n\n  // 1. init standard middleware\n  private insertStandards() {\n    if (!this.sseUrl) {\n      this.app.use(compression()); // nicht zusammen mit SSE verwenden!\n    }\n    this.app.use(bodyparser.urlencoded({extended: true}));\n    this.app.use(bodyparser.json({limit: \"20mb\"}));\n    this.app.use(cookieParser());\n    if (this.faviconPath) {\n      this.app.use(favicon(this.faviconPath));\n    }\n\n    // CORS: npm install cors\n    // nur bestimmte Hosts erlauben\n    // let corsOptions = {\n    //  origin: \"http://127.0.0.1:8080\"\n    // };\n    // app.use(cors(corsOptions));\n    //\n    // alle Hosts erlauben: app.use.cors()\n    this.app.use(cors(this.corsOptions));\n\n  }\n\n  // 2. init static webserver\n  private insertStatic() {\n    if (this.staticContent) {\n      // TODO fallthrough abschalten -> Doku\n      this.app.use(this.staticUrl, express.static(this.staticContent));\n    }\n  }\n\n  // 3. debug print request\n  private insertDebug() {\n    this.app.use((req: express.Request, res: express.Response, next: express.NextFunction) => {\n\n      this.log.debug(\"---- BEGIN request -------------------\");\n      // z.B. http://localhost:1234/api/test?a=A&b=B\n      // this.log.info(\"protocol: \");\n      // this.log.dir(req.protocol);               // \"http\"\n      // this.log.info(\"hostname: \");\n      // this.log.dir(req.hostname);               // \"localhost\"\n      // this.log.info(\"baseUrl: \");\n      // this.log.dir(req.baseUrl);                // \"/api\"\n      // this.log.info(\"path: \");\n      // this.log.dir(req.path);                   // \"/test\"\n      // this.log.info(\"url: \");\n      // this.log.dir(req.url);                    // \"/test?a=A&b=B\"\n      this.log.debug(\"- originalUrl: \" + req.originalUrl);  // \"/api/test?a=A&b=B\"\n      this.log.debug(\"- method:      \" + req.method);\n      this.log.debug(\"- headers: \");\n      this.log.debug(req.headers);                // { host: ..., connection: ..., etc. }\n      this.log.debug(\"- params: \");\n      this.log.debug(req.params);                 // { }\n      this.log.debug(\"- query: \");\n      this.log.debug(req.query);                  // { a: \"A\", b: \"B\" }\n      this.log.debug(\"- body: \");\n      this.log.debug(req.body);                 // { }\n      this.log.debug(\"---- END request ---------------------\");\n      next();\n    });\n  }\n\n  // 4. Router \"/\" -> logon handling\n  /*\n     SSO via NTLM:\n\n     - request: Client -> IIS?app=<app-name>\n         Client-App (Browser) ruft eine Adresse des IIS auf.\n     -  request: IIS -> this/\"authURL\" (body: uid=<user>)\n          Der IIS ermittelt den NTLM-User und ruft damit die Server-Adresse 'authURL' auf.\n     -  response: this -> IIS (POST: token=<token>) | 401\n          Hier wird der User ueberprueft (this.userCheck -> in WebApp definiert) und bei Erfolg ein\n          Token zurueckgegeben (im Fehlerfall Status 401).\n     - response: IIS -> Client (POST: token=<token>) | 401\n         Der IIS gibt das Token an die Client-App zurueck.\n     - request: Client -> this/\"loginURL\"/<token>\n         Die Client-App ruft die Adresse 'loginURL' auf und gibt in der URL das Token mit.\n     - reponse: this -> Client (GET: <JWT>) | 403\n         Hier wird, sofern das Token nicht aelter als this.tokentimeout ist, ein JsonWebToken\n         generiert. Im JWT werden unter 'data' die Benutzerdaten aus der WebApp eingefuegt und\n         das JWT an den Client zurueckgeliefert (oder Status 403 bei Fehler).\n\n     - request: Client -> this\n         Bei allen weiteren Anfragen gibt der Client das JWT im Header mit. Hier wird das JWT aus dem\n         Header extrahiert und unter request.session.data fuer die WebApp verfuegbar gemacht. Falls\n         das JWT abgelaufen ist wird Status 401 zurueckgegeben.\n   */\n  private insertSessionRouter() {\n    const mainrouter = express.Router();\n    this.app.use(\"/\", mainrouter);\n\n    // \"/\" auf webapp umleiten (fkt. nur, wenn static im REST-Server gehosted wird)\n    mainrouter.route(\"/\")\n        .all((req: express.Request, res: express.Response, next: express.NextFunction) => {\n          if (this.staticContent) {\n            this.log.debug(\"mainrouter redirect to static /\");\n            res.redirect(this.staticUrl); // zur Startseite (fkt. nicht f. ajax!)\n          } else {\n            next();\n          }\n        });\n    // authenticate call from IIS | form\n    mainrouter.route(authURL)\n        .post((req: express.Request, res: express.Response, next: express.NextFunction) => {\n          this.log.info(\"mainrouter AUTH: \" + authURL);\n          this.authenticate(req, res);\n        });\n    // logon call from app with authenticate token\n    mainrouter.route(loginURL + \"/:logintoken\")\n        .get((req: express.Request, res: express.Response, next: express.NextFunction) => {\n          this.log.info(\"mainrouter LOGIN: \", loginURL);\n          // req[\"\"] = req.params.conf_name;\n          this.login(req, res);\n        });\n    // check session\n    mainrouter.use((req: express.Request, res: express.Response, next: express.NextFunction) => {\n      this.log.debug(\"mainrouter default \" + req.path);\n      // nur fuer REST-APIs ist der Session-Check sinnvoll\n      // (static muss das intern regeln, sonstige URLs fallen durch)\n      const checkapi: boolean =\n                this.apis.reduce((b: boolean, a: RestApi) => b ? b : req.path.startsWith(a.path + \"/\"), false);\n      if (checkapi) {\n        this.log.debug(\"check session\");\n        if (this.authService.checkToken(req)) {\n          const usr = req[\"session\"] && req[\"session\"][\"data\"] && req[\"session\"][\"data\"][\"uid\"]\n              ? req[\"session\"][\"data\"][\"uid\"]\n              : \"\";\n          this.log.debug(\"check session: active UID=\" + usr);\n          next(); // session ok -> weiter\n        } else {\n          this.log.error(\"check session: NOT active, send 401\");\n          res.sendStatus(401);  // muss Webapp behandeln\n        }\n      } else {\n        next();\n      }\n    });\n    // SSE-Route\n    if (this.sseUrl) {\n      this.sse = new ServerSentEvent();\n      this.log.info(\"set SSE route to \" + this.sseUrl);\n      mainrouter.route(this.sseUrl).get(this.sse.init);\n    }\n  }\n\n  // 5. App Router(s)\n  private insertAppRouters() {\n    this.apis.forEach((api) => {\n      const router = express.Router();\n      this.log.info(\"router for \" + api.path);\n      this.app.use(api.path, router);\n      api.initRoute(router);\n    });\n  }\n\n  // 6. Handle fall through\n  private insertLast() {\n    this.app.use((req: express.Request, res: express.Response, next) => {\n      this.log.error(\"Router fall through: \" + req.path);\n      // TODO was bis hierher kommt ist ungueltig, also mit 404 antworten ??\n      // -> wenn IE-F12 vergebens jede Menge *.map sucht funktioniert es besser,\n      //    null zurueckzugeben. (next() wuerde implizit 404 ausloesen(?))\n      // res.send(null);\n      res.sendStatus(404);\n    });\n  }\n\n  /**\n   * start server\n   */\n  private run() {\n    this.server = this.app.listen(this.port, () => {\n      this.log.info(\"server [\" + this.appname + \"] started at port \" + this.port);\n    });\n  }\n\n  // ---- login handling ----\n\n  /**\n   *  authenticate w/ userID, [password]\n   *\n   *  POST data in req.body:\n   *  { tpye: NTLM|FORM|NONE, uid: <UserID>, pwd?: <password> }\n   *\n   *  sends { token: <Token> } | 401\n   *\n   * @param req\n   * @param res\n   */\n  private authenticate(req: express.Request, res: express.Response) {\n    this.log.info(\"LOGIN: authenticate uid\");\n    const type = req.body[\"type\"];\n    let user: Promise<string>;\n    switch (type) {\n      case \"NTLM\":\n        user = this.NTLMAuth(req.body);\n        break;\n      case \"FORM\":\n        user = this.formAuth(req.body);\n        break;\n      case \"NONE\":\n        user = this.noneAuth(req.body);\n        break;\n      default:\n        user = this.noneAuth(req.body);\n        break;\n    }\n    user.then((usrid) => {\n      if (usrid) {\n        const authToken: string = uuid.v4();\n        this.log.info(\"LOGIN: uid=\" + usrid + \" new authentication token=\" + authToken);\n        this.tokens[authToken as any] = {uid: usrid, date: Date.now()};\n        const rc: any = {token: authToken};\n        res.send(rc);\n      } else {  // invalid uid/pwd\n        res.sendStatus(401); // TODO Testen, wenn Form-Login mal implementiert wird\n      }\n    });\n  }\n\n  /**\n   * Create new JWT\n   *\n   * GET login/<token>\n   *\n   * @param req\n   * @param res\n   */\n  private login(req: express.Request, res: express.Response) {\n    this.log.info(\"LOGIN: login w/auth-token\");\n    const t = req.params.logintoken;\n    const authToken = this.tokens[t];\n    delete this.tokens[t];\n    this.log.info(\"LOGIN: authentication token=\" + authToken);\n\n    if (Date.now() - authToken.date < this.tokentimeout && this.userCheck) {\n      this.log.info(\"LOGIN: token valid\");\n      this.userCheck.getUser(authToken.uid)\n          .then((user) => {\n            res.send({jwt: this.authService.newToken(user)});\n          })\n          .catch((err) => {\n            this.log.info(\"LOGIN: user not allowed\");\n            res.sendStatus(403);\n          });\n    } else {\n      /* ungueltiges Token */\n      this.log.info(\"LOGIN: token invalid\");\n      res.sendStatus(403); // forbidden\n    }\n  }\n\n  private NTLMAuth(body: any): Promise<any> {\n    const uid = body[\"uid\"];\n    this.log.info(\"LOGIN: NTLMauth get authUser\");\n    if (this.userCheck) {\n      return this.userCheck.authUser(uid);\n    } else {\n      return new Promise((resolve, reject) => reject(\"No UserCheck object.\"));\n    }\n  }\n\n  private formAuth(body: any): Promise<any> {\n    const uid = body[\"uid\"];\n    const pwd = body[\"pwd\"];\n    // TODO check user/pwd\n    if (this.userCheck) {\n      return this.userCheck.authUser(uid, pwd);\n    } else {\n      return new Promise((resolve, reject) => reject(\"No UserCheck object.\"));\n    }\n  }\n\n  private noneAuth(body: any): Promise<any> {\n    const uid = body[\"uid\"];\n    if (this.userCheck) {\n      return this.userCheck.authUser(uid);\n    } else {\n      return new Promise((resolve, reject) => reject(\"No UserCheck object.\"));\n    }\n  }\n\n}\n"]}